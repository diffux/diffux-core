#!/usr/bin/env ruby

require 'diffux_core'
require 'optparse'

options = {
  width: 320
}
OptionParser.new do |opts|
  opts.banner = 'Usage: diffux-snapshot [options]'
  opts.separator ''
  opts.separator 'Options:'

  opts.on('-u', '--url URL',
          'Set a URL to snapshot') do |url|
    options[:url] = url
  end

  opts.on('-o', '--outfile OUTFILE',
          'Specify where the snapshot will be saved') do |f|
    options[:outfile] = f
  end

  opts.on('-w', '--width WIDTH', Integer,
          'Set the width of the screen (defaults to 320)') do |w|
    options[:width] = w
  end

  opts.on('-c', '--cropselector CROPSELECTOR',
          'Limit the snapshot to a specific element') do |cs|
    options[:crop_selector] = cs
  end

  opts.on('-a', '--useragent USERAGENT',
          'Set a useragent header when loading the url') do |ua|
    options[:useragent] = ua
  end

  opts.on_tail('-h', '--help', 'Show this message') do
    puts opts
    exit
  end
end.parse!(ARGV)

help = '(use `diffux-snapshot -h` to see options)'
unless options[:url]
  puts "Missing url #{help}"
  exit 1
end
unless options[:outfile]
  puts "Missing outfile #{help}"
  exit 1
end

Diffux::Snapshotter.new(
  viewport_width: options[:width],
  crop_selector:  options[:crop_selector],
  user_agent:     options[:useragent],
  outfile:        options[:outfile],
  url:            options[:url]
).take_snapshot!
